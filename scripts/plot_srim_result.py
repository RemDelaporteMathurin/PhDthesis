import numpy as np
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
import matplotx

# data from https://doi.org/10.1016/j.nme.2019.03.008 Fig.3
data = np.array(
    [
        [9.919437266989157e-11, 0.16708487695300867],
        [1.304517320263541e-10, 0.18755488299995704],
        [1.6813365944389416e-10, 0.19105974798270575],
        [2.2403890884006087e-10, 0.23874559785919736],
        [2.56032695377838e-10, 0.26874847294853554],
        [2.9596717234526246e-10, 0.32581721951437714],
        [3.2736597320159074e-10, 0.3705715948175623],
        [3.486601253934209e-10, 0.39923416132791323],
        [3.8208411834557967e-10, 0.4375584078138888],
        [4.508860141592589e-10, 0.4832122853671992],
        [5.153336540285964e-10, 0.5380404427033016],
        [5.939630272111039e-10, 0.5806483987864032],
        [6.800032463554668e-10, 0.6476224225107416],
        [7.811280375466656e-10, 0.6865023724973056],
        [8.531756862080384e-10, 0.7261273605602621],
        [9.410486473766198e-10, 0.7766331457388835],
        [1.0840260130299812e-9, 0.8404397408527347],
        [1.245233926081885e-9, 0.8903123813235794],
        [1.4813819326684472e-9, 0.9416559823738206],
        [1.5605486450070782e-9, 0.9882681467648787],
        [1.752659208536762e-9, 0.9342817373863125],
        [1.8395257958039748e-9, 0.9975641491164366],
        [1.93242359159102e-9, 0.9558329801131763],
        [2.4032457935812987e-9, 0.9372853050685295],
        [2.6194019304342016e-9, 0.8835258052705734],
        [2.6862698735565757e-9, 0.8379619120272415],
        [2.8610034873051667e-9, 0.7756529642098089],
        [3.0857510253048176e-9, 0.7128442270554161],
        [3.2864696623589788e-9, 0.6560639348048654],
        [3.4131146351538524e-9, 0.6012884313313047],
        [3.5685472813185622e-9, 0.5213171629885766],
        [3.8553497568138766e-9, 0.45351625775088233],
        [4.054700492753016e-9, 0.4071538278542436],
        [4.271531462789782e-9, 0.3487292521493818],
        [4.522701644747817e-9, 0.2771710573835756],
        [4.716759897536395e-9, 0.22289909753307446],
        [5.002509615174926e-9, 0.17935313306807976],
        [5.239119995566403e-9, 0.14451617378177906],
        [5.634877143775607e-9, 0.07517294524308515],
        [7.179630169767252e-9, 0.012629894934116148],
        [9.315930129084453e-9, -0.005600645324767006],
        [1.2774108647456257e-8, -0.004055810227590717],
        [1.5995184022730008e-8, -0.0024419141437421743],
        [2.1766670224033428e-8, -0.004941955828656086],
        [3.228807467403201e-8, -0.0044230598570838],
        [4.1526147342313544e-8, -0.00002290246713698707],
        [5.5017840617675634e-8, -0.004303995355079637],
        [8.15531812212383e-8, -0.005249995003098196],
        [9.510878771366291e-8, -0.0005916768111706716],
    ]
)

x = data[:, 0] * 1e9  # x in m
y = data[:, 1]

# normalise by area
area = np.trapz(y, x)
y *= 1 / area


def gaus(x, a, x0, sigma):
    return a * np.exp(-((x - x0) ** 2) / (2 * sigma**2))


popt, pcov = curve_fit(gaus, x, y, p0=[1, 2, 1])
x_fit = np.linspace(0, 10, num=100)
y_fit = gaus(x_fit, *popt)
with plt.style.context(matplotx.styles.dufte):
    plt.figure(figsize=(7, 4.8))
    plt.plot(x_fit, y_fit)
    plt.fill_between(x_fit, np.zeros(y_fit.shape), y_fit, alpha=0.3)
    plt.plot(x, y)

    plt.ylim(bottom=0)
    plt.xlim(right=10)
    plt.xlabel("Range (nm)")
    matplotx.ylabel_top("Implantation \n distribution (nm$^{-1}$)")
    plt.annotate("SRIM", (4, 0.15), color="tab:orange")
    plt.annotate("Gaussian fit", (2.9, 0.3), color="tab:blue")
    plt.tight_layout()
    plt.show()
